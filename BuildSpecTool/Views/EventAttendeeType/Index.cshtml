@model BuildSpecTool.ViewModels.AttendeeTypeViewModel

@using (Html.BeginForm("Save", "EventAttendeeType"))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.EventAttendeeType.EventId)

        <div class="row">

            <nav aria-label="breadcrumb">
                <ol class="breadcrumb" style="padding:15px;">
                    <li class="breadcrumb-item" aria-current="Site Management">@Html.ActionLink("Site Management", "Index", "SiteManagement", new { id = Model.EventAttendeeType.EventId }, null)</li>
                    <li class="breadcrumb-item active" aria-current="Site Management">@Html.ActionLink("Attendee Type", "Index", "EventAttendeeType")</li>
                </ol>
            </nav>
            <hr />
            <div class="panel panel-primary">
                <!-- Default panel contents -->
                <div class="panel-heading">
                    <p>Site Components</p>
                </div>
                <div class="panel-body">
                    <div class="col-md-8">
                        <p>New Attendee type</p>
                        <hr />

                        <div class="form-group">
                            @Html.LabelFor(model => model.RefAttendeeTypes, "Attendee Type", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.EventAttendeeType.AttendeeTypeId, new SelectList(Model.RefAttendeeTypes, "Id", "Name"), "", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.EventAttendeeType.AttendeeTypeId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.EventAttendeeType.Invited, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <div class="checkbox">
                                    @Html.EditorFor(model => model.EventAttendeeType.Invited)
                                    @Html.ValidationMessageFor(model => model.EventAttendeeType.Invited, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.EventAttendeeType.HasRSVP, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <div class="checkbox">
                                    @Html.EditorFor(model => model.EventAttendeeType.HasRSVP)
                                    @Html.ValidationMessageFor(model => model.EventAttendeeType.HasRSVP, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.EventAttendeeType.Capacity, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.EventAttendeeType.Capacity, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.EventAttendeeType.Capacity, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.EventAttendeeType.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.EventAttendeeType.Description, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.EventAttendeeType.Description, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        @Html.Partial("_AttendeeTypeList", Model.EventAttendeeTypes)
                    </div>

                </div>
                <div class="panel-footer text-right">
                    <div class="btn-group" role="group" aria-label="Save and Back Buttons">
                        <a class="btn btn-default" href="@Url.Action("Index","EventManagement", new { id = Model.EventAttendeeType.EventId }, null)">Back</a>
                        <button type="submit" class="btn btn-primary">@(Model.EventAttendeeType.Id == 0 ? "Submit" : "Update")</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@section scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            var options = {
                onText: "Yes",
                onColor: 'success',
                offColor: 'default',
                offText: "No",
                animate: true,
                size: 'small'
            };
            $("input[class='check-box']").bootstrapSwitch(options);
        });

    </script>
}