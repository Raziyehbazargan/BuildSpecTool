@model BuildSpecTool.ViewModels.StatusViewModel

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.EventStatus.EventId)

        <div class="row">

            <nav aria-label="breadcrumb">
                <ol class="breadcrumb" style="padding:15px;">
                    <li class="breadcrumb-item" aria-current="Site Management">@Html.ActionLink("Site Management", "Index", "SiteManagement", new { id = Model.EventStatus.EventId}, null )</li>
                    <li class="breadcrumb-item active" aria-current="Site Management">@Html.ActionLink("Event Status", "Index", "EventStatus")</li>
                </ol>
            </nav>
            <hr/>
            <div class="panel panel-primary">
                <!-- Default panel contents -->
                <div class="panel-heading">
                    <p>Site Components</p>
                </div>
                <div class="panel-body">
                    <div class="col-md-8">
                        <div class="form-group">
                            @Html.LabelFor(model => model.RefStatus, "Status", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.EventStatus.StatusId, new SelectList(Model.RefStatus, "Id", "Name"), "", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.EventStatus.StatusId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.EventStatus.UsedInEvent, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <div class="checkbox">
                                    @Html.EditorFor(model => model.EventStatus.UsedInEvent)
                                    @Html.ValidationMessageFor(model => model.EventStatus.UsedInEvent, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.EventStatus.IsInvitation, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <div class="checkbox">
                                    @Html.EditorFor(model => model.EventStatus.IsInvitation)
                                    @Html.ValidationMessageFor(model => model.EventStatus.IsInvitation, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.EventStatus.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.EventStatus.Description, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.EventStatus.Description, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="panel-footer text-right">
                    <div class="btn-group" role="group" aria-label="Save and Back Buttons">
                        <a class="btn btn-default" href="@Url.Action("Index","EventManagement", new { id = Model.EventStatus.EventId }, null)">Back</a>
                        <button type="submit" class="btn btn-primary">@(Model.EventStatus.Id == 0 ? "Submit" : "Update")</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
@section scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            var options = {
                onText: "Yes",
                onColor: 'success',
                offColor: 'default',
                offText: "No",
                animate: true,
                size: 'small'
            };
            $("input[class='check-box']").bootstrapSwitch(options);
        });

    </script>
}